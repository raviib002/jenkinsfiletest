//properties([
//    parameters([
//           [
//            $class: 'ParameterSeparatorDefinition',
//            name: 'BUILD_HEADER',
//            sectionHeader: 'Package details'
//           ],
//           string(name: 'VERSION', description: 'Version of IC package (i.e 6.7.0)'),
//           string(name: 'RELEASE', description: 'Release version of IC package (i.e GA)'),
//           [
//            $class: 'ParameterSeparatorDefinition',
//            name: 'BUILD_HEADER',
//            sectionHeader: 'Database Details'
//           ],
//           choice(name: 'RHEL_VER', choices: ['7', '8'], description: 'RHEL Version'),
//           //choice(name: 'RELEASE', choices: ['GA', 'SP1'], description: 'The commercial DB provider'),
//           choice(name: 'DB_TYPE', choices: ['oracle', 'postgres'], description: 'The commercial DB provider'),
//           booleanParam(name: 'DEPLOY_TO_NEXUS', defaultValue: false, description: 'Should the package be released and uploaded to Nexus'),
//           [
//            $class: 'ParameterSeparatorDefinition',
//            name: 'BUILD_HEADER',
//            sectionHeader: 'Cleanup Parameters'
//           ],
//           booleanParam(name: "CLEAN_WORKSPACE_AFTER_BUILD", defaultValue: true, description: 'Delete workspace after build'),
//       ]
//    )
//])

pipeline {
    agent none
//    environment {
//        NEXUS_URL = 'https://nexus.cfrm.dev.local/repository'
//        NEXUS_CREDS = credentials('nexus-creds')
//        GIT_CREDS = credentials('CFRMGit-jenkins-svc')
//        //#########################//
//        INSTALLATION_PATH = '/home/deployment_scripts'
//        SED_VAR = '        <Valve className="com.intellinx.authenticators.TenantIdMergedToUserNameValve" landingPage="/" disableProxyCaching="false" /> \n </Context>'
//        SED_VAR1 = 'cloud.new_user.concatenate_tenant_automatically=true'
//        IC_FOLDER = '/opt/ic'
//        HOST_NAME = 'IL02VLDEVOPS5001.cfrm.dev.local'
//    }

    stages {
        stage('Read Config File') {
            agent { label 'slave1' }
            steps{
                script {
                    if(1 == 1){
                    echo "read config file is 1"    
                    }
                    else
                    {
                    echo "read config file is not 1"
                    }
                }
            }
        }
        stage('Download Artifacts') {
            agent { label 'slave1' }
            steps{
                script {
                    if (2 == 2)
                    {
                    echo "Download Artifacts is 2"
                    }
                    else if (3 == 3)
                    {
                    echo "Download Artifacts is 3"
                    }
                }
            }
        }       
        stage('Generate DB Scripts') {
            agent { label 'slave1' }
            steps{
                script {
                    if (4 == 4)
                    {
                    echo "Generate DB Scripts is 4"
                    }
                }
            }
        }
        stage('Package') {
            agent { label 'slave1' }            
            steps{
                script {
                    echo "Package is 5"
                }
            }
        }
        stage('Testing activity') {
            agent { label 'slave2' }
            steps{
                script {
                    echo "Testing activity step 1"
                }
            }
        }
        stage('Exctracting and excluding') {
            agent { label 'slave2' }
            steps{
                script {
                    echo "Exctracting and excluding is not 1"                    
                }
            }
            post{
                success {
                    script{
                        echo "Post success slave1"
                    }
                }
            }
        }
    }
}
